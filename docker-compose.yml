version: "2"

services:
  psdocker:
    image: "postgres"
    #container-name: psdocker
    networks: 
      - kafkanet
    ports:
      - 5432:5432
    #volumes-from: 
    #   - PostgresData  
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "labdef"
  zookeeper:
    networks:
      - kafkanet
    ports:
      - "2181:2181"
    image: "wurstmeister/zookeeper"

  kafka:
    image: "wurstmeister/kafka"
    networks:
      - kafkanet
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  kafkamanager:
    image: hlebalbau/kafka-manager:stable
    networks:
      - kafkanet
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "kafkaserver:2181"
      #APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
  kafkaserver:
    image: "johnnypark/kafka-zookeeper:latest"
    container_name: kafka
    hostname: kafkaserver
    networks: 
      - kafkanet
    ports:
      - 2182:2181
      - 9092:9092
    environment:
      ADVERTISED_HOST: kafkaserver
      #ADVERTISED_PORT: 9092
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka_manager:
    image: "mzagar/kafka-manager-docker:1.3.3.4"
    container_name: kafkamanager
    networks: 
      - kafkanet
    ports:
      - 9000:9000
    #links:
    #  - kafkaserver
    environment:
      ZK_HOSTS: "kafkaserver:2181"
  consumerservice:
    image: "footballer-team-statistic/message-consumer"
    container_name: messageconsumer
    depends_on:
      - psdocker
    networks: 
      - kafkanet
    ports:
      - 9001:9001
    environment:
      DATABASE_HOST: psdocker
      DATABASE_NAME: labdef
      DATABASE_PORT: 5432
    cpuset: "1"
  eurekaserver:
    image: "footballer-team-statistic/eureka-client:latest"
    container_name: eurekaserver
    hostname: eurekaserver
    depends_on:
      - psdocker
    networks:
      - kafkanet
    ports:
      - 8761:8761
    environment:
      - DATABASE_HOST=psdocker
      - DATABASE_NAME=labdef
      - DATABASE_PORT=5432
      - HOST_NAME=eurekaserver
      - eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
  configserver:
    image: "footballer-team-statistic/config-server:latest"
    container_name: configserver
    hostname: configserver
    depends_on: 
      - eurekaserver
    networks:
      - kafkanet
    #network_mode: host
    ports:
      - 8085:8085
    links:
      - eurekaserver
      - kafkaserver
    cpuset: "1"
    environment:
      - HOST_NAME=configserver
      - eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
  tfcservice:
    image: "footballer-team-statistic/tfccrud1:latest"
    container_name: tfcservice
    hostname: services
    depends_on:
      - eurekaserver
      - configserver
    networks: 
      - kafkanet
    ports:
      - 8100:8100
    links:
      - eurekaserver
      - kafkaserver
    environment:
      - DATABASE_HOST=psdocker
      - DATABASE_NAME=labdef
      - DATABASE_PORT=5432
      - HOST_NAME=eurekaserver
      - eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
  clientservice:
    image: "footballer-team-statistic/client:latest"
    container_name: clientservice
    depends_on:
      - eurekaserver
    networks: 
      - kafkanet
    ports:
      - 8080:8080
    links: 
      - eurekaserver
    environment:
      - HOST_NAME=eurekaserver
      - eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
      - DATABASE_HOST=psdocker
      - DATABASE_NAME=labdef
      - DATABASE_PORT=5432
  gateway:
    build: ./gateway
    environment:
      - HOST_NAME=gateway
      - eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
    ports:
      - "8090:8090"
    networks:
      - kafkanet
    depends_on:
      - eurekaserver

networks: 
  kafkanet:
    driver:
      bridge